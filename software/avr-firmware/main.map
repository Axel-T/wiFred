Archive member included to satisfy reference by file (symbol)

/usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
LOAD main.o
LOAD uart.o
LOAD keypad.o
LOAD analog.o
LOAD led.o
LOAD timer.o
LOAD /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000       0x84
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000074        0x8 /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
 *(.init9)
 *(.text)
 .text          0x000000000000007c        0x4 /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
                0x000000000000007c                __vector_22
                0x000000000000007c                __vector_1
                0x000000000000007c                __vector_24
                0x000000000000007c                __vector_12
                0x000000000000007c                __bad_interrupt
                0x000000000000007c                __vector_6
                0x000000000000007c                __vector_3
                0x000000000000007c                __vector_23
                0x000000000000007c                __vector_25
                0x000000000000007c                __vector_11
                0x000000000000007c                __vector_13
                0x000000000000007c                __vector_17
                0x000000000000007c                __vector_19
                0x000000000000007c                __vector_7
                0x000000000000007c                __vector_5
                0x000000000000007c                __vector_4
                0x000000000000007c                __vector_9
                0x000000000000007c                __vector_2
                0x000000000000007c                __vector_21
                0x000000000000007c                __vector_15
                0x000000000000007c                __vector_8
                0x000000000000007c                __vector_14
                0x000000000000007c                __vector_10
                0x000000000000007c                __vector_16
                0x000000000000007c                __vector_18
                0x000000000000007c                __vector_20
 .text          0x0000000000000080        0x0 main.o
 .text          0x0000000000000080        0x0 uart.o
 .text          0x0000000000000080        0x0 keypad.o
 .text          0x0000000000000080        0x0 analog.o
 .text          0x0000000000000080        0x0 led.o
 .text          0x0000000000000080        0x0 timer.o
 .text          0x0000000000000080        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x0000000000000080                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x0000000000000080        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000080        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000080        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000080        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000080        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000080        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000080        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x0000000000000080                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000080        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x0000000000000080                exit
                0x0000000000000080                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000080        0x4 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000084                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000000084
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 uart.o
 .data          0x0000000000800100        0x0 keypad.o
 .data          0x0000000000800100        0x0 analog.o
 .data          0x0000000000800100        0x0 led.o
 .data          0x0000000000800100        0x0 timer.o
 .data          0x0000000000800100        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100        0x0
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
 .bss           0x0000000000800100        0x0 main.o
 .bss           0x0000000000800100        0x0 uart.o
 .bss           0x0000000000800100        0x0 keypad.o
 .bss           0x0000000000800100        0x0 analog.o
 .bss           0x0000000000800100        0x0 led.o
 .bss           0x0000000000800100        0x0 timer.o
 .bss           0x0000000000800100        0x0 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800100                PROVIDE (__bss_end, .)
                0x0000000000000084                __data_load_start = LOADADDR (.data)
                0x0000000000000084                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800100        0x0
                0x0000000000800100                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800100                PROVIDE (__noinit_end, .)
                0x0000000000800100                _end = .
                0x0000000000800100                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 uart.o
 .comment       0x0000000000000011       0x12 keypad.o
 .comment       0x0000000000000011       0x12 analog.o
 .comment       0x0000000000000011       0x12 led.o
 .comment       0x0000000000000011       0x12 timer.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x67b
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
 .debug_info    0x00000000000005f4       0x87 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)

.debug_abbrev   0x0000000000000000      0x5b6
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
 .debug_abbrev  0x00000000000005a2       0x14 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)

.debug_line     0x0000000000000000       0x82
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
 .debug_line    0x000000000000001d        0x0 main.o
 .debug_line    0x000000000000001d        0x0 uart.o
 .debug_line    0x000000000000001d        0x0 keypad.o
 .debug_line    0x000000000000001d        0x0 analog.o
 .debug_line    0x000000000000001d        0x0 led.o
 .debug_line    0x000000000000001d        0x0 timer.o
 .debug_line    0x000000000000001d       0x65 /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x2d9
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
 .debug_str     0x0000000000000208       0xaa main.o
 .debug_str     0x00000000000002b2        0x7 uart.o
                                         0xaa (size before relaxing)
 .debug_str     0x00000000000002b9        0x9 keypad.o
                                         0xac (size before relaxing)
 .debug_str     0x00000000000002c2        0x9 analog.o
                                         0xac (size before relaxing)
 .debug_str     0x00000000000002cb        0x6 led.o
                                         0xa9 (size before relaxing)
 .debug_str     0x00000000000002d1        0x8 timer.o
                                         0xab (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__heap_end                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__init                                            /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__stack                                           /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_1                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_10                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_11                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_12                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_13                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_14                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_15                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_16                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_17                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_18                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_19                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_2                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_20                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_21                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_22                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_23                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_24                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_25                                       /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_3                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_4                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_5                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_6                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_7                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_8                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_9                                        /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vector_default                                  /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
__vectors                                         /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
_exit                                             /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
exit                                              /usr/lib64/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
main                                              /usr/lib64/gcc/avr/4.9.2/../../../../avr/lib/avr5/crtm328.o
